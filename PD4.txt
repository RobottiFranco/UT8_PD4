1. Los algoritmos que resuelven la necesidad de la compañía son PRIM y KRUSKAL
ESTRUCTURAS DE DATOS UTILIZADA EN KRUSKAL: aprovechando los métodos de hallar caminos desarrollados
para grafo dirigido, se implementó listas enlazadas ya que son una estructura muy optimizada en cuanto a costo en memoria. 
Para hallar si eran aristas de distinto componente conexo o del mismo, se hizo recorriendo las aristas ordenadas por costo y hallando los
posibles caminos existentes, para así ver si añadir la arista o no.
ESTRUCTURAS DE DATOS UTILIZADAS EN PRIM: nuevamente se utilizan las listas enlazadas.
2. Observar: PSEUDO PRIM.jpg y PSEUDO KRUSKAL.txt

3.
PRIM 
U={}			V={1,2,3,4,5,6}			T={}
U={1}			V={2,3,4,5,6}			T={(1,4,3),
U={1,4}		V={2,3,5,6}			   (4,6,3),
U={1,4,6}		V={2,3,5}				   (4,3,4),
U={1,4,6,3}	V={2,5}				   (3,2,3),
U={1,4,6,3,2}	V={5}					   (3,5,5),
U={1,4,6,3,2,5}	V={}					   }

KRUSKAL

(1,4,3)
(4,1,3)
(2,3,3)
(3,2,3)
(4,6,3)
(6,4,3)
(1,6,4)
(6,1,4)
(3,4,4)
(4,3,4)
(1,2,5)
(2,1,5)
(2,4,5)
(4,2,5)
(3,5,5)
(5,3,5)
(5,6,6)
(6,5,6)
(1,3,7)
(3,1,7)
(2,5,7)
(5,2,7)
(3,6,7)
(6,3,7)
(2,6,8)
(6,2,8)
(1,5,9)
(5,1,9)
(4,5,9)
(5,4,9)

F
(1,4,3)
(4,1,3)
(2,3,3)
(3,2,3)
(4,6,3)
(6,4,3)
(3,4,4)
(4,3,4)
(3,5,5)
(5,3,5)
